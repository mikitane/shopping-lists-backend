frameworkVersion: '2.18.0'

org: mikitane
app: shopping-lists-backend
service: auth

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'

plugins:
  - serverless-domain-manager

custom:
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true
  seed:
    incremental:
      enabled: true
  customDomain:
    domainName: '${opt:stage}-api.mikitane-shopping-lists.com'
    basePath: 'auth'
    stage: ${opt:stage}
    certificateName: '*.mikitane-shopping-lists.com'
    createRoute53Record: true

functions:
  refreshTokens:
    handler: 'src/functions/refreshTokens.refreshTokens'
    environment:
      AdminMainUserPoolClientId: !Ref AdminMainUserPoolClient
      AdminMainUserPoolClientSecret: !GetAtt AdminMainUserPoolClient.ClientSecret
    events:
      - http:
          method: post
          path: refresh-token

resources:
  Resources:
    MainUserPool:
      Type: 'AWS::Cognito::UserPool'
      Properties:
        UserPoolName: ${self:service}-${opt:stage}-MainUserPool
        UsernameAttributes:
          - phone_number
          - email
    MainUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: MainUserPoolClient
        UserPoolId: !Ref MainUserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
    AdminMainUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: AdminMainUserPoolClient
        UserPoolId: !Ref MainUserPool
        GenerateSecret: true
        ExplicitAuthFlows:
          - ALLOW_ADMIN_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH

  Outputs:
    MainUserPoolArn:
      Value: !GetAtt MainUserPool.Arn
      Export:
        Name: ${self:service}-${opt:stage}-MainUserPool-Arn


